

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Thu Apr 29 18:38:26 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	maintext,global,class=CODE,split=1,delta=2
     7                           	psect	text1,local,class=CODE,merge=1,delta=2
     8                           	psect	text2,local,class=CODE,merge=1,delta=2
     9                           	dabs	1,0x7E,2
    10  0000                     
    11                           ; Version 2.31
    12                           ; Generated 13/10/2020 GMT
    13                           ; 
    14                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    15                           ; All rights reserved.
    16                           ; 
    17                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    18                           ; 
    19                           ; Redistribution and use in source and binary forms, with or without modification, are
    20                           ; permitted provided that the following conditions are met:
    21                           ; 
    22                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    23                           ;        conditions and the following disclaimer.
    24                           ; 
    25                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    26                           ;        of conditions and the following disclaimer in the documentation and/or other
    27                           ;        materials provided with the distribution. Publication is not required when
    28                           ;        this file is used in an embedded application.
    29                           ; 
    30                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    31                           ;        software without specific prior written permission.
    32                           ; 
    33                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    34                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    35                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    36                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    37                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    38                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    39                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    40                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    41                           ; 
    42                           ; 
    43                           ; Code-generator required, PIC16F877A Definitions
    44                           ; 
    45                           ; SFR Addresses
    46  0000                     	;# 
    47  0001                     	;# 
    48  0002                     	;# 
    49  0003                     	;# 
    50  0004                     	;# 
    51  0005                     	;# 
    52  0006                     	;# 
    53  0007                     	;# 
    54  0008                     	;# 
    55  0009                     	;# 
    56  000A                     	;# 
    57  000B                     	;# 
    58  000C                     	;# 
    59  000D                     	;# 
    60  000E                     	;# 
    61  000E                     	;# 
    62  000F                     	;# 
    63  0010                     	;# 
    64  0011                     	;# 
    65  0012                     	;# 
    66  0013                     	;# 
    67  0014                     	;# 
    68  0015                     	;# 
    69  0015                     	;# 
    70  0016                     	;# 
    71  0017                     	;# 
    72  0018                     	;# 
    73  0019                     	;# 
    74  001A                     	;# 
    75  001B                     	;# 
    76  001B                     	;# 
    77  001C                     	;# 
    78  001D                     	;# 
    79  001E                     	;# 
    80  001F                     	;# 
    81  0081                     	;# 
    82  0085                     	;# 
    83  0086                     	;# 
    84  0087                     	;# 
    85  0088                     	;# 
    86  0089                     	;# 
    87  008C                     	;# 
    88  008D                     	;# 
    89  008E                     	;# 
    90  0091                     	;# 
    91  0092                     	;# 
    92  0093                     	;# 
    93  0094                     	;# 
    94  0098                     	;# 
    95  0099                     	;# 
    96  009C                     	;# 
    97  009D                     	;# 
    98  009E                     	;# 
    99  009F                     	;# 
   100  010C                     	;# 
   101  010D                     	;# 
   102  010E                     	;# 
   103  010F                     	;# 
   104  018C                     	;# 
   105  018D                     	;# 
   106  0000                     	;# 
   107  0001                     	;# 
   108  0002                     	;# 
   109  0003                     	;# 
   110  0004                     	;# 
   111  0005                     	;# 
   112  0006                     	;# 
   113  0007                     	;# 
   114  0008                     	;# 
   115  0009                     	;# 
   116  000A                     	;# 
   117  000B                     	;# 
   118  000C                     	;# 
   119  000D                     	;# 
   120  000E                     	;# 
   121  000E                     	;# 
   122  000F                     	;# 
   123  0010                     	;# 
   124  0011                     	;# 
   125  0012                     	;# 
   126  0013                     	;# 
   127  0014                     	;# 
   128  0015                     	;# 
   129  0015                     	;# 
   130  0016                     	;# 
   131  0017                     	;# 
   132  0018                     	;# 
   133  0019                     	;# 
   134  001A                     	;# 
   135  001B                     	;# 
   136  001B                     	;# 
   137  001C                     	;# 
   138  001D                     	;# 
   139  001E                     	;# 
   140  001F                     	;# 
   141  0081                     	;# 
   142  0085                     	;# 
   143  0086                     	;# 
   144  0087                     	;# 
   145  0088                     	;# 
   146  0089                     	;# 
   147  008C                     	;# 
   148  008D                     	;# 
   149  008E                     	;# 
   150  0091                     	;# 
   151  0092                     	;# 
   152  0093                     	;# 
   153  0094                     	;# 
   154  0098                     	;# 
   155  0099                     	;# 
   156  009C                     	;# 
   157  009D                     	;# 
   158  009E                     	;# 
   159  009F                     	;# 
   160  010C                     	;# 
   161  010D                     	;# 
   162  010E                     	;# 
   163  010F                     	;# 
   164  018C                     	;# 
   165  018D                     	;# 
   166  0007                     _PORTC	set	7
   167  0006                     _PORTB	set	6
   168  001E                     _ADRESH	set	30
   169  001F                     _ADCON0	set	31
   170  00FA                     _GO_nDONE	set	250
   171  0087                     _TRISC	set	135
   172  0086                     _TRISB	set	134
   173  0085                     _TRISA	set	133
   174  009E                     _ADRESL	set	158
   175  009F                     _ADCON1	set	159
   176                           
   177                           	psect	cinit
   178  07FC                     start_initialization:	
   179                           ; #config settings
   180                           
   181  07FC                     __initialization:
   182  07FC                     end_of_initialization:	
   183                           ;End of C runtime variable initialization code
   184                           
   185  07FC                     __end_of__initialization:
   186  07FC  0183               	clrf	3
   187  07FD  120A  118A  2F9C   	ljmp	_main	;jump to C main() function
   188                           
   189                           	psect	cstackCOMMON
   190  0070                     __pcstackCOMMON:
   191  0070                     ?_ADC_Init:
   192  0070                     ??_ADC_Init:	
   193                           ; 1 bytes @ 0x0
   194                           
   195  0070                     ?_main:	
   196                           ; 1 bytes @ 0x0
   197                           
   198  0070                     ?_ADC_Read:	
   199                           ; 1 bytes @ 0x0
   200                           
   201                           
   202                           ; 2 bytes @ 0x0
   203  0070                     	ds	2
   204  0072                     ??_ADC_Read:
   205                           
   206                           ; 1 bytes @ 0x2
   207  0072                     	ds	2
   208  0074                     ADC_Read@channel:
   209                           
   210                           ; 1 bytes @ 0x4
   211  0074                     	ds	1
   212  0075                     ??_main:
   213                           
   214                           ; 1 bytes @ 0x5
   215  0075                     	ds	3
   216  0078                     main@a:
   217                           
   218                           ; 2 bytes @ 0x8
   219  0078                     	ds	2
   220                           
   221                           	psect	maintext
   222  079C                     __pmaintext:	
   223 ;;
   224 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   225 ;;
   226 ;; *************** function _main *****************
   227 ;; Defined at:
   228 ;;		line 25 in file "newmain.c"
   229 ;; Parameters:    Size  Location     Type
   230 ;;		None
   231 ;; Auto vars:     Size  Location     Type
   232 ;;  a               2    8[COMMON] unsigned int 
   233 ;; Return value:  Size  Location     Type
   234 ;;                  1    wreg      void 
   235 ;; Registers used:
   236 ;;		wreg, status,2, status,0, pclath, cstack
   237 ;; Tracked objects:
   238 ;;		On entry : B00/0
   239 ;;		On exit  : 0/0
   240 ;;		Unchanged: 0/0
   241 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   242 ;;      Params:         0       0       0       0       0
   243 ;;      Locals:         2       0       0       0       0
   244 ;;      Temps:          3       0       0       0       0
   245 ;;      Totals:         5       0       0       0       0
   246 ;;Total ram usage:        5 bytes
   247 ;; Hardware stack levels required when called:    1
   248 ;; This function calls:
   249 ;;		_ADC_Init
   250 ;;		_ADC_Read
   251 ;; This function is called by:
   252 ;;		Startup code after reset
   253 ;; This function uses a non-reentrant model
   254 ;;
   255                           
   256                           
   257                           ;psect for function _main
   258  079C                     _main:
   259  079C                     l681:	
   260                           ;incstack = 0
   261                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   262                           
   263                           
   264                           ;newmain.c: 27:   unsigned int a;;newmain.c: 28:   TRISA = 0xFF;
   265  079C  30FF               	movlw	255
   266  079D  1683               	bsf	3,5	;RP0=1, select bank1
   267  079E  1303               	bcf	3,6	;RP1=0, select bank1
   268  079F  0085               	movwf	5	;volatile
   269  07A0                     l683:
   270                           
   271                           ;newmain.c: 29:   TRISB = 0x00;
   272  07A0  0186               	clrf	6	;volatile
   273  07A1                     l685:
   274                           
   275                           ;newmain.c: 30:   TRISC = 0x00;
   276  07A1  0187               	clrf	7	;volatile
   277  07A2                     l687:
   278                           
   279                           ;newmain.c: 31:   ADC_Init();
   280  07A2  120A  118A  2794  120A  118A  	fcall	_ADC_Init
   281  07A7                     l689:
   282                           
   283                           ;newmain.c: 34:   {;newmain.c: 35:     a = ADC_Read(0);
   284  07A7  3000               	movlw	0
   285  07A8  120A  118A  27C8  120A  118A  	fcall	_ADC_Read
   286  07AD  0871               	movf	?_ADC_Read+1,w
   287  07AE  00F9               	movwf	main@a+1
   288  07AF  0870               	movf	?_ADC_Read,w
   289  07B0  00F8               	movwf	main@a
   290                           
   291                           ;newmain.c: 36:     PORTB = a;
   292  07B1  0878               	movf	main@a,w
   293  07B2  1283               	bcf	3,5	;RP0=0, select bank0
   294  07B3  1303               	bcf	3,6	;RP1=0, select bank0
   295  07B4  0086               	movwf	6	;volatile
   296  07B5                     l691:
   297                           
   298                           ;newmain.c: 37:     PORTC = a>>8;
   299  07B5  0879               	movf	main@a+1,w
   300  07B6  0087               	movwf	7	;volatile
   301  07B7                     l693:
   302                           
   303                           ;newmain.c: 38:     _delay((unsigned long)((100)*(8000000/4000.0)));
   304  07B7  3002               	movlw	2
   305  07B8  00F7               	movwf	??_main+2
   306  07B9  3004               	movlw	4
   307  07BA  00F6               	movwf	??_main+1
   308  07BB  30BA               	movlw	186
   309  07BC  00F5               	movwf	??_main
   310  07BD                     u77:
   311  07BD  0BF5               	decfsz	??_main,f
   312  07BE  2FBD               	goto	u77
   313  07BF  0BF6               	decfsz	??_main+1,f
   314  07C0  2FBD               	goto	u77
   315  07C1  0BF7               	decfsz	??_main+2,f
   316  07C2  2FBD               	goto	u77
   317  07C3  0000               	nop
   318                           
   319                           ;newmain.c: 40:   }while(1);
   320  07C4  2FA7               	goto	l689
   321  07C5  120A  118A  2800   	ljmp	start
   322  07C8                     __end_of_main:
   323                           
   324                           	psect	text1
   325  07C8                     __ptext1:	
   326 ;; *************** function _ADC_Read *****************
   327 ;; Defined at:
   328 ;;		line 12 in file "newmain.c"
   329 ;; Parameters:    Size  Location     Type
   330 ;;  channel         1    wreg     unsigned char 
   331 ;; Auto vars:     Size  Location     Type
   332 ;;  channel         1    4[COMMON] unsigned char 
   333 ;; Return value:  Size  Location     Type
   334 ;;                  2    0[COMMON] unsigned int 
   335 ;; Registers used:
   336 ;;		wreg, status,2, status,0
   337 ;; Tracked objects:
   338 ;;		On entry : 0/0
   339 ;;		On exit  : 0/0
   340 ;;		Unchanged: 0/0
   341 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   342 ;;      Params:         2       0       0       0       0
   343 ;;      Locals:         1       0       0       0       0
   344 ;;      Temps:          2       0       0       0       0
   345 ;;      Totals:         5       0       0       0       0
   346 ;;Total ram usage:        5 bytes
   347 ;; Hardware stack levels used:    1
   348 ;; This function calls:
   349 ;;		Nothing
   350 ;; This function is called by:
   351 ;;		_main
   352 ;; This function uses a non-reentrant model
   353 ;;
   354                           
   355                           
   356                           ;psect for function _ADC_Read
   357  07C8                     _ADC_Read:
   358                           
   359                           ;incstack = 0
   360                           ; Regs used in _ADC_Read: [wreg+status,2+status,0]
   361                           ;ADC_Read@channel stored from wreg
   362  07C8  00F4               	movwf	ADC_Read@channel
   363  07C9                     l665:
   364                           
   365                           ;newmain.c: 12: unsigned int ADC_Read(unsigned char channel);newmain.c: 13: {;newmain.c:
      +                           14:   if(channel > 7)
   366  07C9  3008               	movlw	8
   367  07CA  0274               	subwf	ADC_Read@channel,w
   368  07CB  1C03               	skipc
   369  07CC  2FCE               	goto	u41
   370  07CD  2FCF               	goto	u40
   371  07CE                     u41:
   372  07CE  2FD2               	goto	l671
   373  07CF                     u40:
   374  07CF                     l667:
   375                           
   376                           ;newmain.c: 15:     return 0;
   377  07CF  01F0               	clrf	?_ADC_Read
   378  07D0  01F1               	clrf	?_ADC_Read+1
   379  07D1  2FFB               	goto	l29
   380  07D2                     l671:
   381                           
   382                           ;newmain.c: 17:   ADCON0 &= 0xC5;
   383  07D2  30C5               	movlw	197
   384  07D3  00F2               	movwf	??_ADC_Read
   385  07D4  0872               	movf	??_ADC_Read,w
   386  07D5  1283               	bcf	3,5	;RP0=0, select bank0
   387  07D6  1303               	bcf	3,6	;RP1=0, select bank0
   388  07D7  059F               	andwf	31,f	;volatile
   389                           
   390                           ;newmain.c: 18:   ADCON0 |= channel<<3;
   391  07D8  0874               	movf	ADC_Read@channel,w	;volatile
   392  07D9  00F2               	movwf	??_ADC_Read
   393  07DA  3002               	movlw	2
   394  07DB                     u55:
   395  07DB  1003               	clrc
   396  07DC  0DF2               	rlf	??_ADC_Read,f
   397  07DD  3EFF               	addlw	-1
   398  07DE  1D03               	skipz
   399  07DF  2FDB               	goto	u55
   400  07E0  1003               	clrc
   401  07E1  0D72               	rlf	??_ADC_Read,w
   402  07E2  00F3               	movwf	??_ADC_Read+1
   403  07E3  0873               	movf	??_ADC_Read+1,w
   404  07E4  049F               	iorwf	31,f	;volatile
   405  07E5                     l673:
   406                           
   407                           ;newmain.c: 19:   _delay((unsigned long)((2)*(8000000/4000.0)));
   408  07E5  3006               	movlw	6
   409  07E6  00F3               	movwf	??_ADC_Read+1
   410  07E7  3030               	movlw	48
   411  07E8  00F2               	movwf	??_ADC_Read
   412  07E9                     u87:
   413  07E9  0BF2               	decfsz	??_ADC_Read,f
   414  07EA  2FE9               	goto	u87
   415  07EB  0BF3               	decfsz	??_ADC_Read+1,f
   416  07EC  2FE9               	goto	u87
   417  07ED  0000               	nop
   418  07EE                     l675:
   419                           
   420                           ;newmain.c: 20:   GO_nDONE = 1;
   421  07EE  1283               	bcf	3,5	;RP0=0, select bank0
   422  07EF  1303               	bcf	3,6	;RP1=0, select bank0
   423  07F0  151F               	bsf	31,2	;volatile
   424  07F1                     l30:	
   425                           ;newmain.c: 21:   while(GO_nDONE);
   426                           
   427  07F1  191F               	btfsc	31,2	;volatile
   428  07F2  2FF4               	goto	u61
   429  07F3  2FF5               	goto	u60
   430  07F4                     u61:
   431  07F4  2FF1               	goto	l30
   432  07F5                     u60:
   433  07F5                     l677:
   434                           
   435                           ;newmain.c: 22:   return ((ADRESH<<8)+ADRESL);
   436  07F5  081E               	movf	30,w	;volatile
   437  07F6  00F1               	movwf	?_ADC_Read+1
   438  07F7  1683               	bsf	3,5	;RP0=1, select bank1
   439  07F8  1303               	bcf	3,6	;RP1=0, select bank1
   440  07F9  081E               	movf	30,w	;volatile
   441  07FA  00F0               	movwf	?_ADC_Read
   442  07FB                     l29:
   443  07FB  0008               	return
   444  07FC                     __end_of_ADC_Read:
   445                           
   446                           	psect	text2
   447  0794                     __ptext2:	
   448 ;; *************** function _ADC_Init *****************
   449 ;; Defined at:
   450 ;;		line 6 in file "newmain.c"
   451 ;; Parameters:    Size  Location     Type
   452 ;;		None
   453 ;; Auto vars:     Size  Location     Type
   454 ;;		None
   455 ;; Return value:  Size  Location     Type
   456 ;;                  1    wreg      void 
   457 ;; Registers used:
   458 ;;		wreg, status,2
   459 ;; Tracked objects:
   460 ;;		On entry : 0/0
   461 ;;		On exit  : 0/0
   462 ;;		Unchanged: 0/0
   463 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   464 ;;      Params:         0       0       0       0       0
   465 ;;      Locals:         0       0       0       0       0
   466 ;;      Temps:          0       0       0       0       0
   467 ;;      Totals:         0       0       0       0       0
   468 ;;Total ram usage:        0 bytes
   469 ;; Hardware stack levels used:    1
   470 ;; This function calls:
   471 ;;		Nothing
   472 ;; This function is called by:
   473 ;;		_main
   474 ;; This function uses a non-reentrant model
   475 ;;
   476                           
   477                           
   478                           ;psect for function _ADC_Init
   479  0794                     _ADC_Init:
   480  0794                     l631:	
   481                           ;incstack = 0
   482                           ; Regs used in _ADC_Init: [wreg+status,2]
   483                           
   484                           
   485                           ;newmain.c: 8:   ADCON0 = 0x81;
   486  0794  3081               	movlw	129
   487  0795  1283               	bcf	3,5	;RP0=0, select bank0
   488  0796  1303               	bcf	3,6	;RP1=0, select bank0
   489  0797  009F               	movwf	31	;volatile
   490  0798                     l633:
   491                           
   492                           ;newmain.c: 9:   ADCON1 = 0x00;
   493  0798  1683               	bsf	3,5	;RP0=1, select bank1
   494  0799  1303               	bcf	3,6	;RP1=0, select bank1
   495  079A  019F               	clrf	31	;volatile
   496  079B                     l25:
   497  079B  0008               	return
   498  079C                     __end_of_ADC_Init:
   499  007E                     btemp	set	126	;btemp
   500  007E                     wtemp0	set	126

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     10      10
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_ADC_Read

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 5     5      0      89
                                              5 COMMON     5     5      0
                           _ADC_Init
                           _ADC_Read
 ---------------------------------------------------------------------------------
 (1) _ADC_Read                                             5     3      2      44
                                              0 COMMON     5     3      2
 ---------------------------------------------------------------------------------
 (1) _ADC_Init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_Init
   _ADC_Read

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      A       A       1       71.4%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       0      12        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Thu Apr 29 18:38:26 2021

                     l30 07F1                       l25 079B                       l29 07FB  
                     u40 07CF                       u41 07CE                       u60 07F5  
                     u61 07F4                       u55 07DB                       u77 07BD  
                     u87 07E9                      l631 0794                      l633 0798  
                    l671 07D2                      l673 07E5                      l665 07C9  
                    l681 079C                      l675 07EE                      l667 07CF  
                    l691 07B5                      l683 07A0                      l677 07F5  
                    l693 07B7                      l685 07A1                      l687 07A2  
                    l689 07A7                     _main 079C                     btemp 007E  
       __end_of_ADC_Init 079C         __end_of_ADC_Read 07FC                     start 0000  
                  ?_main 0070                    _PORTB 0006                    _PORTC 0007  
                  _TRISA 0085                    _TRISB 0086                    _TRISC 0087  
                  main@a 0078                    status 0003                    wtemp0 007E  
        __initialization 07FC             __end_of_main 07C8                   ??_main 0075  
                 _ADCON0 001F                   _ADCON1 009F                   _ADRESH 001E  
                 _ADRESL 009E          ADC_Read@channel 0074                ?_ADC_Init 0070  
              ?_ADC_Read 0070  __end_of__initialization 07FC           __pcstackCOMMON 0070  
             ??_ADC_Init 0070               ??_ADC_Read 0072               __pmaintext 079C  
                __ptext1 07C8                  __ptext2 0794     end_of_initialization 07FC  
      __size_of_ADC_Init 0008        __size_of_ADC_Read 0034      start_initialization 07FC  
              ___latbits 0002                 _ADC_Init 0794                 _ADC_Read 07C8  
               _GO_nDONE 00FA            __size_of_main 002C  
